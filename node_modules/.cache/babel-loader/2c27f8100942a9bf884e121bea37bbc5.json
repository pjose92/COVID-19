{"ast":null,"code":"import axios from \"axios\";\nconst url = \"https://covid19.mathdro.id/api\";\nexport const fetchData = async country => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: {\n        confirmed,\n        recovered,\n        deaths,\n        lastUpdate\n      }\n    } = await axios.get(changeableUrl);\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchDailyData = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(`${url}/daily`);\n    console.log(\"line 23 index.js in api folder\", data);\n    const modifiedData = data.map(dailyData => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate\n    }));\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: {\n        countries\n      }\n    } = await axios.get(`${url}/countries`);\n    return countries.map(country => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/joseperez/Desktop/Lambda School/Git/COVID-19/src/api/index.js"],"names":["axios","url","fetchData","country","changeableUrl","data","confirmed","recovered","deaths","lastUpdate","get","error","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,gCAAZ;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAMC,OAAN,IAAiB;AACxC,MAAIC,aAAa,GAAGH,GAApB;;AACA,MAAIE,OAAJ,EAAa;AACXC,IAAAA,aAAa,GAAI,GAAEH,GAAI,cAAaE,OAAQ,EAA5C;AACD;;AACD,MAAI;AACF,UAAM;AACJE,MAAAA,IAAI,EAAE;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,SAAb;AAAwBC,QAAAA,MAAxB;AAAgCC,QAAAA;AAAhC;AADF,QAEF,MAAMT,KAAK,CAACU,GAAN,CAAUN,aAAV,CAFV;AAGA,WAAO;AAAEE,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA,MAAxB;AAAgCC,MAAAA;AAAhC,KAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAbM;AAeP,OAAO,MAAMG,cAAc,GAAG,YAAY;AACxC,MAAI;AACF,UAAM;AAAET,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACU,GAAN,CAAW,GAAET,GAAI,QAAjB,CAAvB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CR,IAA9C;AACA,UAAMU,YAAY,GAAGV,IAAI,CAACW,GAAL,CAASC,SAAS,KAAK;AAC1CX,MAAAA,SAAS,EAAEW,SAAS,CAACX,SAAV,CAAoBY,KADW;AAE1CV,MAAAA,MAAM,EAAES,SAAS,CAACT,MAAV,CAAiBU,KAFiB;AAG1CC,MAAAA,IAAI,EAAEF,SAAS,CAACG;AAH0B,KAAL,CAAlB,CAArB;AAMA,WAAOL,YAAP;AACD,GAVD,CAUE,OAAOJ,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAdM;AAgBP,OAAO,MAAMU,cAAc,GAAG,YAAY;AACxC,MAAI;AACF,UAAM;AACJhB,MAAAA,IAAI,EAAE;AAAEiB,QAAAA;AAAF;AADF,QAEF,MAAMtB,KAAK,CAACU,GAAN,CAAW,GAAET,GAAI,YAAjB,CAFV;AAGA,WAAOqB,SAAS,CAACN,GAAV,CAAcb,OAAO,IAAIA,OAAO,CAACoB,IAAjC,CAAP;AACD,GALD,CAKE,OAAOZ,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CATM","sourcesContent":["import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async country => {\n  let changeableUrl = url;\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate }\n    } = await axios.get(changeableUrl);\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    console.log(\"line 23 index.js in api folder\", data);\n    const modifiedData = data.map(dailyData => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate\n    }));\n\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries }\n    } = await axios.get(`${url}/countries`);\n    return countries.map(country => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};"]},"metadata":{},"sourceType":"module"}